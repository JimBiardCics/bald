import unittest

import h5py
import numpy as np

from bald.tests import BaldTestCase

def _fattrs(f):
    f.attrs.create('bald_._', 'http://binary_array_ld.net/experimental')
    f.attrs.create('bald_._type', 'bald_._Container')
    # f.attrs['bald_._'] = 'http://binary_array_ld.net/experimental'
    # f.attrs['bald_._type'] = 'bald_._Container'
    return f
    

class TestArrayReference(BaldTestCase):
    def test_match_array_reference(self):
        with self.temp_filename('.hdf') as tfile:
            f = h5py.File(tfile, "w")
            f = _fattrs(f)
            dsetp = f.create_dataset("mydataset", (11, 17), dtype='i')
            dsetc = f.create_dataset("mydataset", (11, 17), dtype='i')
            dsetp.create('bald_._reference', dsetc.ref)
            f.close()
            newf = h5py.File(tfile, "r")
            import pdb; pdb.set_trace()
            nset = newf.get('mydatasetp')


if __name__ == '__main__':
    unittest.main()
